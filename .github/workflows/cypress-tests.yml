name: Cypress Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: |
            app/package-lock.json
            backend/package-lock.json

      - name: Install app dependencies
        working-directory: ./app
        run: npm ci

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Start backend server
        working-directory: ./backend
        run: |
          npm start &
          echo $! > backend.pid
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://admin:password@localhost:27017/material_management_test?authSource=admin

      - name: Wait for backend to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3001/api/health; do sleep 2; done'

      - name: Start frontend dev server
        working-directory: ./app
        run: |
          npm run dev &
          echo $! > frontend.pid

      - name: Wait for frontend to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:5173; do sleep 2; done'

      - name: Run component tests
        working-directory: ./app
        run: npm run test.component

      - name: Run E2E tests
        working-directory: ./app
        run: npm run test.e2e
        env:
          CYPRESS_baseUrl: http://localhost:5173
          CYPRESS_apiUrl: http://localhost:3001

      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.node-version }}
          path: app/cypress/screenshots

      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos-${{ matrix.node-version }}
          path: app/cypress/videos

      - name: Stop servers
        if: always()
        run: |
          if [ -f app/frontend.pid ]; then
            kill $(cat app/frontend.pid) || true
          fi
          if [ -f backend/backend.pid ]; then
            kill $(cat backend/backend.pid) || true
          fi

  unit-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: |
            app/package-lock.json
            backend/package-lock.json

      - name: Install app dependencies
        working-directory: ./app
        run: npm ci

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run frontend unit tests
        working-directory: ./app
        run: npm run test.unit -- --run

      - name: Run backend tests
        working-directory: ./backend
        run: npm test
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/material_management_test
